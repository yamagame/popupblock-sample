{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["startMessage","blockMessage","endMessage","wait","time","Promise","resolve","setTimeout","App","React","useState","message","setMessage","targetUrl","setTargetUrl","onlineMessage","setOnlineMessage","onlineClass","setOnlineClass","showButtons","setShowButtons","disableButtons","setDisableButtons","numberInput","useRef","useEffect","window","navigator","onLine","onOnline","e","onOffline","addEventListener","removeEventListener","buttonCss","useMemo","onClickDoublePopup","a","win1","open","close","win2","onClickDoubleWaitPopup","onKeyDown","ctrlKey","metaKey","key","length","match","preventDefault","onBeforeInput","data","className","href","ref","type","inputMode","defaultValue","pattern","onChange","console","log","target","value","placeholder","onClick","test","then","cb","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","onbeforeunload","returnValue","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea0e1625.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nconst startMessage = \"処理開始\";\nconst blockMessage = \"ポップアップがブロックされました。\";\nconst endMessage = \"処理終了\";\n\nconst wait = (time = 5500) => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve();\n    }, time);\n  });\n};\n\nfunction App() {\n  const [message, setMessage] = React.useState(\"\");\n  const [targetUrl, setTargetUrl] = React.useState(\"\");\n  const [onlineMessage, setOnlineMessage] = React.useState(\"\");\n  const [onlineClass, setOnlineClass] = React.useState(\"\");\n  const [showButtons, setShowButtons] = React.useState(\"show\");\n  const [disableButtons, setDisableButtons] = React.useState(false);\n  const numberInput = React.useRef(null);\n\n  React.useEffect(() => {\n    // const input = document.getElementsByName(\"numberInput\")[0];\n    // numberInput.current.focus();\n    // numberInput.current.value = \"0\";\n    // numberInput.current.dispatchEvent(new FocusEvent(\"focus\"));\n    // input.dispatchEvent(new Event(\"change\", { bubbles: true }));\n  }, [numberInput]);\n\n  React.useEffect(() => {\n    if (window.navigator.onLine) {\n      setOnlineMessage(\"オンライン\");\n    } else {\n      setOnlineMessage(\"オフライン\");\n    }\n    const onOnline = (e) => {\n      setOnlineMessage(\"オンライン\");\n    };\n    const onOffline = (e) => {\n      setOnlineMessage(\"オフライン\");\n    };\n    window.addEventListener(\"offline\", onOffline);\n    window.addEventListener(\"online\", onOnline);\n    return () => {\n      window.removeEventListener(\"offline\", onOffline);\n      window.removeEventListener(\"online\", onOnline);\n    };\n  }, []);\n\n  React.useEffect(() => {\n    if (onlineMessage === \"オンライン\") {\n      setOnlineClass(\"online\");\n    } else {\n      setOnlineClass(\"offline\");\n    }\n  }, [onlineMessage]);\n\n  React.useEffect(() => {\n    if (message === startMessage) {\n      setDisableButtons(true);\n    } else {\n      setDisableButtons(false);\n    }\n  }, [message]);\n\n  const buttonCss = React.useMemo(\n    () => `button ${disableButtons ? \"disabled\" : \"\"}`,\n    [disableButtons]\n  );\n\n  const onClickOpenPopup = () => {\n    window.open(targetUrl);\n    setShowButtons(\"show\");\n  };\n\n  const onClickOpenClosePopup = () => {\n    setMessage(startMessage);\n    const win1 = window.open(targetUrl);\n    if (!win1) {\n      setMessage(`${blockMessage}(1)`);\n    } else {\n      win1.close();\n      setMessage(endMessage);\n    }\n  };\n\n  const onClick1SecondPopup = () => {\n    setMessage(startMessage);\n    setTimeout(() => {\n      const win1 = window.open(targetUrl);\n      if (!win1) {\n        setMessage(`${blockMessage}(1)`);\n      } else {\n        win1.close();\n        setMessage(endMessage);\n      }\n    }, 1500);\n  };\n\n  const onClick5SecondPopup = () => {\n    setMessage(startMessage);\n    setTimeout(() => {\n      const win1 = window.open(targetUrl);\n      if (!win1) {\n        setMessage(`${blockMessage}(1)`);\n      } else {\n        win1.close();\n        setMessage(endMessage);\n      }\n    }, 5500);\n  };\n\n  const onClickDoublePopup = async () => {\n    setMessage(startMessage);\n    const win1 = window.open(targetUrl);\n    win1?.close();\n    if (!win1) {\n      setMessage(`${blockMessage}(1)`);\n    } else {\n      const win2 = window.open(targetUrl);\n      win2?.close();\n      if (!win2) {\n        setMessage(`${blockMessage}(2)`);\n      } else {\n        setMessage(endMessage);\n      }\n    }\n  };\n\n  const onClickDoubleWaitPopup = async () => {\n    setMessage(startMessage);\n    const win1 = window.open(targetUrl);\n    win1?.close();\n    if (!win1) {\n      setMessage(`${blockMessage}(1)`);\n    } else {\n      setTimeout(() => {\n        const win2 = window.open(targetUrl);\n        win2?.close();\n        if (!win2) {\n          setMessage(`${blockMessage}(2)`);\n        } else {\n          setMessage(endMessage);\n        }\n      }, 1000);\n    }\n  };\n\n  const onClickDoubleWait5secPopup = () => {\n    setMessage(startMessage);\n    setTimeout(() => {\n      const win1 = window.open(targetUrl);\n      win1?.close();\n      if (!win1) {\n        setMessage(`${blockMessage}(1)`);\n      } else {\n        setTimeout(() => {\n          const win2 = window.open(targetUrl);\n          win2?.close();\n          if (!win2) {\n            setMessage(`${blockMessage}(2)`);\n          } else {\n            setMessage(endMessage);\n          }\n        }, 5500);\n      }\n    }, 5500);\n  };\n\n  const onClick5SecondOpenPopup = () => {\n    setMessage(startMessage);\n    setShowButtons(\"hidden\");\n    setTimeout(() => {\n      setMessage(\"ポップアップを開いてください。\");\n    }, 5500);\n  };\n\n  const onOpenWindow = () => {\n    console.log(\"click\");\n    const test = async () => {\n      const value = \"hello\";\n      await wait();\n      return () => {\n        return value;\n      };\n    };\n    test().then(async (cb) => {\n      await wait();\n      console.log(cb());\n    });\n  };\n\n  const onChange = (e) => setTargetUrl(e.target.value);\n  const onKeyDown = (e) => {\n    if (\n      !e.ctrlKey &&\n      !e.metaKey &&\n      e.key.length === 1 &&\n      !e.key.match(/^[0-9]$/)\n    ) {\n      e.preventDefault();\n    }\n  };\n  const onBeforeInput = (e) => {\n    if (e.data.length === 1 && !e.data.match(/^[0-9]$/)) {\n      e.preventDefault();\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"col border\">\n          <p className=\"label\">オンライン・オフライン判定</p>\n          <div className={onlineClass}>{onlineMessage}</div>\n          <a className=\"label\" href=\"http://www.yahoo.co.jp\">\n            Yahoo!\n          </a>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col border\">\n          <p className=\"label\">半角数字入力 対策あり number</p>\n          <input\n            ref={numberInput}\n            type=\"number\"\n            inputMode=\"numeric\"\n            className=\"number\"\n            defaultValue=\"0\"\n            pattern=\"[0-9]\"\n            onChange={(e) => {\n              console.log(e.target.value);\n            }}\n            onKeyDown={onKeyDown}\n            onBeforeInput={onBeforeInput}\n          />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col border\">\n          <p className=\"label\">半角数字入力 対策あり tel</p>\n          <input\n            type=\"tel\"\n            inputMode=\"numeric\"\n            className=\"number\"\n            defaultValue=\"0\"\n            pattern=\"[0-9]\"\n            onChange={(e) => {\n              console.log(e.target.value);\n            }}\n            onKeyDown={onKeyDown}\n            onBeforeInput={onBeforeInput}\n          />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col border\">\n          <p className=\"label\">半角数字入力 対策なし number</p>\n          <input\n            type=\"number\"\n            inputMode=\"numeric\"\n            pattern=\"[0-9]\"\n            className=\"number\"\n            defaultValue=\"0\"\n            onChange={(e) => {\n              console.log(e.target.value);\n            }}\n          />\n        </div>\n      </div>\n      <div className=\"row\">\n        <input\n          className=\"input\"\n          type=\"text\"\n          onChange={onChange}\n          value={targetUrl}\n          placeholder=\"ポップアップページのURLを入力\"\n        />\n      </div>\n      <div className=\"row\">\n        <div className={buttonCss} onClick={onClickOpenPopup}>\n          ポップアップを開く\n        </div>\n      </div>\n      <div className={showButtons}>\n        <div className=\"row\">\n          <div className={buttonCss} onClick={onClickOpenClosePopup}>\n            ポップアップを開いて閉じる\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className={buttonCss} onClick={onClick1SecondPopup}>\n            1.5秒待ち開いて閉じる\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className={buttonCss} onClick={onClick5SecondPopup}>\n            5.5秒待ち開いて閉じる\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className={buttonCss} onClick={onClickDoublePopup}>\n            2回開いて閉じる\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className={buttonCss} onClick={onClickDoubleWait5secPopup}>\n            2回開いて閉じる(5秒待ち)\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className={buttonCss} onClick={onClickDoubleWaitPopup}>\n            開いて閉じる(2回目だけ1秒待ち)\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className={buttonCss} onClick={onClick5SecondOpenPopup}>\n          5.5秒待ち問い合わせで開く\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className={buttonCss} onClick={onOpenWindow}>\n          ウインドウを開く\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"message\">{message}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nwindow.onbeforeunload = function (e) {\n  e.preventDefault();\n  e.returnValue = \"ページを離れようとしています。よろしいですか？\";\n  return e.returnValue;\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}