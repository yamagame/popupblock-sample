{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["startMessage","blockMessage","endMessage","App","React","useState","message","setMessage","targetUrl","setTargetUrl","onlineMessage","setOnlineMessage","onlineClass","setOnlineClass","useEffect","window","navigator","onLine","onOnline","e","onOffline","addEventListener","removeEventListener","onClickDoublePopup","a","win1","open","close","win2","onClickDoubleWaitPopup","setTimeout","className","type","onChange","target","value","placeholder","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7fc5b9a5.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nconst startMessage = \"処理開始\";\nconst blockMessage = \"ポップアップがブロックされました。\";\nconst endMessage = \"処理終了\";\n\nfunction App() {\n  const [message, setMessage] = React.useState(\"\");\n  const [targetUrl, setTargetUrl] = React.useState(\"\");\n  const [onlineMessage, setOnlineMessage] = React.useState(\"\");\n  const [onlineClass, setOnlineClass] = React.useState(\"\");\n\n  React.useEffect(() => {\n    if (window.navigator.onLine) {\n      setOnlineMessage(\"オンライン\");\n    } else {\n      setOnlineMessage(\"オフライン\");\n    }\n    const onOnline = (e) => {\n      setOnlineMessage(\"オンライン\");\n    };\n    const onOffline = (e) => {\n      setOnlineMessage(\"オフライン\");\n    };\n    window.addEventListener(\"offline\", onOffline);\n    window.addEventListener(\"online\", onOnline);\n    return () => {\n      window.removeEventListener(\"offline\", onOffline);\n      window.removeEventListener(\"online\", onOnline);\n    };\n  }, []);\n\n  React.useEffect(() => {\n    if (onlineMessage === \"オンライン\") {\n      setOnlineClass(\"online\");\n    } else {\n      setOnlineClass(\"offline\");\n    }\n  }, [onlineMessage]);\n\n  const onClickOpenPopup = () => {\n    window.open(targetUrl);\n  };\n\n  const onClickOpenClosePopup = () => {\n    setMessage(startMessage);\n    const win1 = window.open(targetUrl);\n    if (!win1) {\n      setMessage(`${blockMessage}(1)`);\n    } else {\n      win1.close();\n      setMessage(endMessage);\n    }\n  };\n\n  const onClick5SecondPopup = () => {\n    setMessage(startMessage);\n    setTimeout(() => {\n      const win1 = window.open(targetUrl);\n      if (!win1) {\n        setMessage(`${blockMessage}(1)`);\n      } else {\n        win1.close();\n        setMessage(endMessage);\n      }\n    }, 5500);\n  };\n\n  const onClickDoublePopup = async () => {\n    setMessage(startMessage);\n    const win1 = window.open(targetUrl);\n    win1?.close();\n    if (!win1) {\n      setMessage(`${blockMessage}(1)`);\n    } else {\n      const win2 = window.open(targetUrl);\n      win2?.close();\n      if (!win2) {\n        setMessage(`${blockMessage}(2)`);\n      } else {\n        setMessage(endMessage);\n      }\n    }\n  };\n\n  const onClickDoubleWaitPopup = async () => {\n    setMessage(startMessage);\n    const win1 = window.open(targetUrl);\n    win1?.close();\n    if (!win1) {\n      setMessage(`${blockMessage}(1)`);\n    } else {\n      setTimeout(() => {\n        const win2 = window.open(targetUrl);\n        win2?.close();\n        if (!win2) {\n          setMessage(`${blockMessage}(2)`);\n        } else {\n          setMessage(endMessage);\n        }\n      }, 1000);\n    }\n  };\n\n  const onChange = (e) => setTargetUrl(e.target.value);\n\n  return (\n    <div>\n      <div className=\"row\">\n        <div className={onlineClass}>{onlineMessage}</div>\n      </div>\n      <div className=\"row\">\n        <input\n          className=\"input\"\n          type=\"text\"\n          onChange={onChange}\n          value={targetUrl}\n          placeholder=\"ポップアップページのURLを入力\"\n        />\n      </div>\n      <div className=\"row\">\n        <div className=\"button\" onClick={onClickOpenPopup}>\n          ポップアップを開く\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"button\" onClick={onClickOpenClosePopup}>\n          ポップアップを開いて閉じる\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"button\" onClick={onClick5SecondPopup}>\n          5.5秒待ち開いて閉じる\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"button\" onClick={onClickDoublePopup}>\n          2回開いて閉じる\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"button\" onClick={onClickDoubleWaitPopup}>\n          開いて閉じる(2回目だけ1秒待ち)\n        </div>\n      </div>\n      <div className=\"row\">\n        <div>{message}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}