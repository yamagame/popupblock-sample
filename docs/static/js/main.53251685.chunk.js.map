{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["startMessage","blockMessage","endMessage","App","React","useState","message","setMessage","targetUrl","setTargetUrl","onClickDoublePopup","a","win1","window","open","close","win2","onClickDoubleWaitPopup","setTimeout","className","type","onChange","e","target","value","placeholder","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAGMA,EAAe,2BACfC,EAAe,yGACfC,EAAa,2BAmHJC,MAjHf,WAAgB,IAAD,EACiBC,IAAMC,SAAS,IADhC,mBACNC,EADM,KACGC,EADH,OAEqBH,IAAMC,SAAS,IAFpC,mBAENG,EAFM,KAEKC,EAFL,KAgCPC,EAAkB,uCAAG,8BAAAC,EAAA,sDACzBJ,EAAWP,GAEP,QADEY,EAAOC,OAAOC,KAAKN,UACrB,IAAJI,KAAMG,QACDH,GAIC,QADEI,EAAOH,OAAOC,KAAKN,UACrB,IAAJQ,KAAMD,QAIJR,EAHGS,EAGQd,EAFA,GAAD,OAAID,EAAJ,SALZM,EAAW,GAAD,OAAIN,EAAJ,QALa,2CAAH,qDAiBlBgB,EAAsB,uCAAG,4BAAAN,EAAA,sDAC7BJ,EAAWP,GAEP,QADEY,EAAOC,OAAOC,KAAKN,UACrB,IAAJI,KAAMG,QACDH,EAGHM,YAAW,WACT,IAAMF,EAAOH,OAAOC,KAAKN,GACrB,OAAJQ,QAAI,IAAJA,KAAMD,QAIJR,EAHGS,EAGQd,EAFA,GAAD,OAAID,EAAJ,UAIX,KAVHM,EAAW,GAAD,OAAIN,EAAJ,QALiB,2CAAH,qDAqB5B,OACE,gCACE,qBAAKkB,UAAU,MAAf,SACE,uBACEA,UAAU,QACVC,KAAK,OACLC,SARS,SAACC,GAAD,OAAOb,EAAaa,EAAEC,OAAOC,QAStCA,MAAOhB,EACPiB,YAAY,wFAGhB,qBAAKN,UAAU,MAAf,SACE,qBAAKA,UAAU,SAASO,QA9EL,WACvBb,OAAOC,KAAKN,IA6ER,sEAIF,qBAAKW,UAAU,MAAf,SACE,qBAAKA,UAAU,SAASO,QA/EA,WAC5BnB,EAAWP,GACX,IAAMY,EAAOC,OAAOC,KAAKN,GACpBI,GAGHA,EAAKG,QACLR,EAAWL,IAHXK,EAAW,GAAD,OAAIN,EAAJ,SA2ER,8FAIF,qBAAKkB,UAAU,MAAf,SACE,qBAAKA,UAAU,SAASO,QAzEF,WAC1BnB,EAAWP,GACXkB,YAAW,WACT,IAAMN,EAAOC,OAAOC,KAAKN,GACpBI,GAGHA,EAAKG,QACLR,EAAWL,IAHXK,EAAW,GAAD,OAAIN,EAAJ,UAKX,OA+DC,yEAIF,qBAAKkB,UAAU,MAAf,SACE,qBAAKA,UAAU,SAASO,QAAShB,EAAjC,2DAIF,qBAAKS,UAAU,MAAf,SACE,qBAAKA,UAAU,SAASO,QAAST,EAAjC,kGAIF,qBAAKE,UAAU,MAAf,SACE,8BAAMb,UCtGCqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.53251685.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nconst startMessage = \"処理開始\";\nconst blockMessage = \"ポップアップがブロックされました。\";\nconst endMessage = \"処理終了\";\n\nfunction App() {\n  const [message, setMessage] = React.useState(\"\");\n  const [targetUrl, setTargetUrl] = React.useState(\"\");\n\n  const onClickOpenPopup = () => {\n    window.open(targetUrl);\n  };\n\n  const onClickOpenClosePopup = () => {\n    setMessage(startMessage);\n    const win1 = window.open(targetUrl);\n    if (!win1) {\n      setMessage(`${blockMessage}(1)`);\n    } else {\n      win1.close();\n      setMessage(endMessage);\n    }\n  };\n\n  const onClick5SecondPopup = () => {\n    setMessage(startMessage);\n    setTimeout(() => {\n      const win1 = window.open(targetUrl);\n      if (!win1) {\n        setMessage(`${blockMessage}(1)`);\n      } else {\n        win1.close();\n        setMessage(endMessage);\n      }\n    }, 5500);\n  };\n\n  const onClickDoublePopup = async () => {\n    setMessage(startMessage);\n    const win1 = window.open(targetUrl);\n    win1?.close();\n    if (!win1) {\n      setMessage(`${blockMessage}(1)`);\n    } else {\n      const win2 = window.open(targetUrl);\n      win2?.close();\n      if (!win2) {\n        setMessage(`${blockMessage}(2)`);\n      } else {\n        setMessage(endMessage);\n      }\n    }\n  };\n\n  const onClickDoubleWaitPopup = async () => {\n    setMessage(startMessage);\n    const win1 = window.open(targetUrl);\n    win1?.close();\n    if (!win1) {\n      setMessage(`${blockMessage}(1)`);\n    } else {\n      setTimeout(() => {\n        const win2 = window.open(targetUrl);\n        win2?.close();\n        if (!win2) {\n          setMessage(`${blockMessage}(2)`);\n        } else {\n          setMessage(endMessage);\n        }\n      }, 1000);\n    }\n  };\n\n  const onChange = (e) => setTargetUrl(e.target.value);\n\n  return (\n    <div>\n      <div className=\"row\">\n        <input\n          className=\"input\"\n          type=\"text\"\n          onChange={onChange}\n          value={targetUrl}\n          placeholder=\"プップアップページのURLを入力\"\n        />\n      </div>\n      <div className=\"row\">\n        <div className=\"button\" onClick={onClickOpenPopup}>\n          ポップアップを開く\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"button\" onClick={onClickOpenClosePopup}>\n          ポップアップを開いて閉じる\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"button\" onClick={onClick5SecondPopup}>\n          5.5秒待ち開いて閉じる\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"button\" onClick={onClickDoublePopup}>\n          2回開いて閉じる\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"button\" onClick={onClickDoubleWaitPopup}>\n          開いて閉じる(2回目だけ1秒待ち)\n        </div>\n      </div>\n      <div className=\"row\">\n        <div>{message}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}